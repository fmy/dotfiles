bindkey -e

export LANG=ja_JP.UTF-8
export LC_ALL=ja_JP.UTF-8
export XDG_CONFIG_HOME=$HOME/.config
export EDITOR=nvim

setopt correct

# ssh-add before ssh
alias ssh='ssh-add;ssh'

# hub
alias git=hub

alias l='ls -lha'
alias vi=nvim
alias vim=nvim
alias sed='gsed'
alias jq='nocorrect jq'
alias gb='git branch | fzf-tmux -d 15'
alias gdc='git diff --cached'
alias ggg='git reset --soft HEAD~'
alias gbd='git branch --merged | grep -v \* | grep -v master | xargs -I % git branch -d %'
alias gbdd='() { \
  base=${1:-"master"}
  git checkout -q $base && \
  git for-each-ref refs/heads/ "--format=%(refname:short)" | \
  while read branch; do
    mergeBase=$(git merge-base $base $branch) && \
    [[ $(git cherry $base $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == "-"* ]] && \
    git branch -D $branch;
  done
}'
alias curltime='curl -s -o /dev/null -w  "%{time_starttransfer}\n"'

# fzf and ripgrep
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

# word区切り
export WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'
# 保管で大文字を区別しない
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# 履歴ファイルの保存先
export HISTFILE=${HOME}/.zsh_history
# メモリに保存される履歴の件数
export HISTSIZE=1000
# 履歴ファイルに保存される履歴の件数
export SAVEHIST=100000
# 重複を記録しない
setopt hist_ignore_dups
# 開始と終了を記録
setopt EXTENDED_HISTORY
# history search
bindkey '^P' history-beginning-search-backward
bindkey '^N' history-beginning-search-forward

# background foreground
function run-fglast {
  zle push-input
  BUFFER="fg %"
  zle accept-line
}

zle -N run-fglast
bindkey "^Q" run-fglast

# .ssh/configに指定したホストをsshなどの補完候補に
hosts=( ${(@)${${(M)${(s:# :)${(zj:# :)${(Lf)"$([[ -f ~/.ssh/config ]] && < ~/.ssh/config)"}%%\#* }}##host(|name) *}#host(|name) }/\*} )
zstyle ':completion:*:hosts' hosts $hosts

function v() {
  local filepath=$(rg -n "$@" | fzf | awk -F: '{print "+" $2 " \047" $1 "\047"}')
  test -n "$filepath" && eval "vim $filepath"
}

function s() {
  local filepath=$(git status -s | fzf | awk '{print $2}')
  test -n "$filepath" && eval "vim $filepath"
}

function ghq-fzf() {
  local dir=$(ghq list | fzf)
  if [ -n "$dir" ]; then
    BUFFER="cd $(ghq root)/$dir"
    zle accept-line
  fi
}
zle -N ghq-fzf
bindkey '^]' ghq-fzf


function gpr () {
  local repo=$(git config remote.origin.url | awk -F'[@/:]' '{printf "%s/%s/%s", $(NF-2), $(NF-1), $NF}' | awk -F'\\.git' '{print $1}')
  local url="https://$repo/compare/master...$(current_branch)?expand=1"
  open "$url"
}
